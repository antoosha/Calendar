<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classCCalendar">
<title>CCalendar Class Reference</title>
<indexterm><primary>CCalendar</primary></indexterm>
<para>
<computeroutput>#include &lt;CCalendar.h&gt;</computeroutput>
</para>
Collaboration diagram for CCalendar:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classCCalendar__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classCCalendar_1ab196040f98dc6a2baa0f8afdd052e61e">CCalendar</link> ()=default</para>
</listitem>
            <listitem><para>int <link linkend="_classCCalendar_1ab40814a65b4e2cb8658c7afc9619255d">createEvent</link> (std::istream &amp;in, std::ostream &amp;out, <link linkend="_classCCalendar">CCalendar</link> &amp;cCalendar)</para>
</listitem>
            <listitem><para>void <link linkend="_classCCalendar_1abf5f85d44826dd74a70c1aa69f6979e0">addEvent</link> (const int &amp;id, const std::string &amp;name, const <link linkend="_classCDate">CDate</link> &amp;dateFrom, const <link linkend="_classCDate">CDate</link> &amp;dateTo, const std::string &amp;place, const std::vector&lt; std::string &gt; &amp;members, const std::string &amp;description, const std::string &amp;obligation)</para>
</listitem>
            <listitem><para>int <link linkend="_classCCalendar_1a94bad32ae062d80690a838591fb59009">editEvent</link> (std::istream &amp;m_In, std::ostream &amp;m_Out, <link linkend="_classCCalendar">CCalendar</link> &amp;cCalendar)</para>
</listitem>
            <listitem><para>int <link linkend="_classCCalendar_1a5f857663aea027ae9d822974eda44d34">findEvent</link> (std::istream &amp;m_In, std::ostream &amp;m_Out, <link linkend="_classCCalendar">CCalendar</link> &amp;cCalendar) const</para>
</listitem>
            <listitem><para>int <link linkend="_classCCalendar_1aca88757244f723aa93194eb42d6626d4">deleteEvent</link> (std::istream &amp;m_In, std::ostream &amp;m_Out, <link linkend="_classCCalendar">CCalendar</link> &amp;cCalendar)</para>
</listitem>
            <listitem><para>void <link linkend="_classCCalendar_1a0c2e455c09c8184af4dca3569cf988bb">listEvents</link> (std::ostream &amp;m_Out, <link linkend="_classCCalendar">CCalendar</link> &amp;cCalendar) const</para>
</listitem>
            <listitem><para>size_t <link linkend="_classCCalendar_1aff96e01495c697bf4fc33665a495a6c5">generateId</link> (<link linkend="_classCCalendar">CCalendar</link> &amp;cCalendar)</para>
</listitem>
            <listitem><para>int <link linkend="_classCCalendar_1a193a333a15c459234ffb3ce3b49216fb">findFirstPossible</link> (std::istream &amp;m_In, std::ostream &amp;m_Out, <link linkend="_classCCalendar">CCalendar</link> &amp;cCalendar)</para>
</listitem>
            <listitem><para>std::map&lt; int, std::shared_ptr&lt; <link linkend="_classCEvent">CEvent</link> &gt; &gt; &amp; <link linkend="_classCCalendar_1a1120052209755bc9b1aff8b9f5e50eba">returnMapById</link> ()</para>
</listitem>
            <listitem><para>std::multimap&lt; std::string, std::shared_ptr&lt; <link linkend="_classCEvent">CEvent</link> &gt; &gt; &amp; <link linkend="_classCCalendar_1a60b07c55f05e291a077a3521e085e706">returnMapByName</link> ()</para>
</listitem>
            <listitem><para>std::multimap&lt; std::string, std::shared_ptr&lt; <link linkend="_classCEvent">CEvent</link> &gt; &gt; &amp; <link linkend="_classCCalendar_1a6dcbdf6dedfadc8905159e522a87cead">returnMapByDate</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>std::map&lt; int, std::shared_ptr&lt; <link linkend="_classCEvent">CEvent</link> &gt; &gt; <link linkend="_classCCalendar_1ab0dbe65e1e447c729d1fb4bf6afe9833">mapOfEventsById</link></para>
</listitem>
            <listitem><para>std::multimap&lt; std::string, std::shared_ptr&lt; <link linkend="_classCEvent">CEvent</link> &gt; &gt; <link linkend="_classCCalendar_1ab6f9bba9827b6d499692d6d3e6b93262">mapOfEventsByName</link></para>
</listitem>
            <listitem><para>std::multimap&lt; std::string, std::shared_ptr&lt; <link linkend="_classCEvent">CEvent</link> &gt; &gt; <link linkend="_classCCalendar_1a831670618589ac155c0530f9a27bda84">mapOfEventsByDate</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classCDate">CDate</link> <link linkend="_classCCalendar_1a9e5f09c029e83e6cf74e396a93a7ba9c">cDate</link> {}</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classCCalendar_1ab196040f98dc6a2baa0f8afdd052e61e"/>    <section>
    <title>CCalendar()</title>
<indexterm><primary>CCalendar</primary><secondary>CCalendar</secondary></indexterm>
<indexterm><primary>CCalendar</primary><secondary>CCalendar</secondary></indexterm>
<para><computeroutput>CCalendar::CCalendar ( )<computeroutput>[default]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classCCalendar_1abf5f85d44826dd74a70c1aa69f6979e0"/>    <section>
    <title>addEvent()</title>
<indexterm><primary>addEvent</primary><secondary>CCalendar</secondary></indexterm>
<indexterm><primary>CCalendar</primary><secondary>addEvent</secondary></indexterm>
<para><computeroutput>void CCalendar::addEvent (const int &amp; id, const std::string &amp; name, const <link linkend="_classCDate">CDate</link> &amp; dateFrom, const <link linkend="_classCDate">CDate</link> &amp; dateTo, const std::string &amp; place, const std::vector&lt; std::string &gt; &amp; members, const std::string &amp; description, const std::string &amp; obligation)</computeroutput></para>
<para>This method will add event type <link linkend="_classCEvent">CEvent</link> to &quot;database&quot; maps with different ordering.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>id</entry>
                                <entry>
<para>is index of event, type is int </para>
</entry>
                            </row>
                            <row>
                                <entry>name</entry>
                                <entry>
<para>is name of event, type is string </para>
</entry>
                            </row>
                            <row>
                                <entry>dateFrom</entry>
                                <entry>
<para>is date from(object of type CDate) of event </para>
</entry>
                            </row>
                            <row>
                                <entry>dateTo</entry>
                                <entry>
<para>if date to(object of type CDate) of event </para>
</entry>
                            </row>
                            <row>
                                <entry>place</entry>
                                <entry>
<para>is place, type is string </para>
</entry>
                            </row>
                            <row>
                                <entry>members</entry>
                                <entry>
<para>is vector of members, who relates this event, type of member is string </para>
</entry>
                            </row>
                            <row>
                                <entry>description</entry>
                                <entry>
<para>type is string </para>
</entry>
                            </row>
                            <row>
                                <entry>obligation</entry>
                                <entry>
<para>string, which should be &quot;optional&quot; or &quot;required&quot; </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classCCalendar_abf5f85d44826dd74a70c1aa69f6979e0_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classCCalendar_abf5f85d44826dd74a70c1aa69f6979e0_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_classCCalendar_1ab40814a65b4e2cb8658c7afc9619255d"/>    <section>
    <title>createEvent()</title>
<indexterm><primary>createEvent</primary><secondary>CCalendar</secondary></indexterm>
<indexterm><primary>CCalendar</primary><secondary>createEvent</secondary></indexterm>
<para><computeroutput>int CCalendar::createEvent (std::istream &amp; in, std::ostream &amp; out, <link linkend="_classCCalendar">CCalendar</link> &amp; cCalendar)</computeroutput></para>
<para>This method will get necessary parameters from user and then using method addEvent will add this event to &quot;database&quot; of events, to three maps sorted by ID, name, date. If something went wront, method returns -4</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in</entry>
                                <entry>
<para>is input stream </para>
</entry>
                            </row>
                            <row>
                                <entry>out</entry>
                                <entry>
<para>is output stream </para>
</entry>
                            </row>
                            <row>
                                <entry>cCalendar</entry>
                                <entry>
<para>is a reference to an object of <link linkend="_classCCalendar">CCalendar</link> </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0, all is OK </para>

<para>0, something went wrong(usually it is wrong input from user) </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classCCalendar_ab40814a65b4e2cb8658c7afc9619255d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classCCalendar_ab40814a65b4e2cb8658c7afc9619255d_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_classCCalendar_1aca88757244f723aa93194eb42d6626d4"/>    <section>
    <title>deleteEvent()</title>
<indexterm><primary>deleteEvent</primary><secondary>CCalendar</secondary></indexterm>
<indexterm><primary>CCalendar</primary><secondary>deleteEvent</secondary></indexterm>
<para><computeroutput>int CCalendar::deleteEvent (std::istream &amp; m_In, std::ostream &amp; m_Out, <link linkend="_classCCalendar">CCalendar</link> &amp; cCalendar)</computeroutput></para>
<para>Method, which delete event from database using it ID(index).</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in</entry>
                                <entry>
<para>is input stream </para>
</entry>
                            </row>
                            <row>
                                <entry>out</entry>
                                <entry>
<para>is output stream </para>
</entry>
                            </row>
                            <row>
                                <entry>cCalendar</entry>
                                <entry>
<para>is a reference to an object of <link linkend="_classCCalendar">CCalendar</link> </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 if all is OK </para>

<para>-4 if event with id from user&apos;s input does not exist </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classCCalendar_aca88757244f723aa93194eb42d6626d4_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classCCalendar_aca88757244f723aa93194eb42d6626d4_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_classCCalendar_1a94bad32ae062d80690a838591fb59009"/>    <section>
    <title>editEvent()</title>
<indexterm><primary>editEvent</primary><secondary>CCalendar</secondary></indexterm>
<indexterm><primary>CCalendar</primary><secondary>editEvent</secondary></indexterm>
<para><computeroutput>int CCalendar::editEvent (std::istream &amp; m_In, std::ostream &amp; m_Out, <link linkend="_classCCalendar">CCalendar</link> &amp; cCalendar)</computeroutput></para>
<para>This method edits events if all parameters is correctly written by user. Otherwise returns -4. This method can edit all parameters of event. To edit event is better to know it index.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in</entry>
                                <entry>
<para>is input stream </para>
</entry>
                            </row>
                            <row>
                                <entry>out</entry>
                                <entry>
<para>is output stream </para>
</entry>
                            </row>
                            <row>
                                <entry>cCalendar</entry>
                                <entry>
<para>is a reference to an object of <link linkend="_classCCalendar">CCalendar</link> </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>-4 if event with input index does not exist OR number of variant to choose is not correct </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classCCalendar_a94bad32ae062d80690a838591fb59009_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classCCalendar_a94bad32ae062d80690a838591fb59009_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_classCCalendar_1a5f857663aea027ae9d822974eda44d34"/>    <section>
    <title>findEvent()</title>
<indexterm><primary>findEvent</primary><secondary>CCalendar</secondary></indexterm>
<indexterm><primary>CCalendar</primary><secondary>findEvent</secondary></indexterm>
<para><computeroutput>int CCalendar::findEvent (std::istream &amp; m_In, std::ostream &amp; m_Out, <link linkend="_classCCalendar">CCalendar</link> &amp; cCalendar) const</computeroutput></para>
<para>This method finds event. There is 3 variants to find event: 1)by name 2)by place 3)by name and place at once Method will find and print events, which have been found or will write a messege, that any events have not been found.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in</entry>
                                <entry>
<para>is input stream </para>
</entry>
                            </row>
                            <row>
                                <entry>out</entry>
                                <entry>
<para>is output stream </para>
</entry>
                            </row>
                            <row>
                                <entry>cCalendar</entry>
                                <entry>
<para>is a reference to an object of <link linkend="_classCCalendar">CCalendar</link> </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 if all is OK </para>

<para>-4 if something went wrong(usually it is input from user or unexisting event with input id) </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classCCalendar_a5f857663aea027ae9d822974eda44d34_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classCCalendar_a5f857663aea027ae9d822974eda44d34_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_classCCalendar_1a193a333a15c459234ffb3ce3b49216fb"/>    <section>
    <title>findFirstPossible()</title>
<indexterm><primary>findFirstPossible</primary><secondary>CCalendar</secondary></indexterm>
<indexterm><primary>CCalendar</primary><secondary>findFirstPossible</secondary></indexterm>
<para><computeroutput>int CCalendar::findFirstPossible (std::istream &amp; m_In, std::ostream &amp; m_Out, <link linkend="_classCCalendar">CCalendar</link> &amp; cCalendar)</computeroutput></para>
<para>This method find first possible term to postpone event between other events in database of events in calendar. Method will print the date, where user could postpone this event. If any windows will not be found, date will be printed as a date after the last event.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in</entry>
                                <entry>
<para>is input stream </para>
</entry>
                            </row>
                            <row>
                                <entry>out</entry>
                                <entry>
<para>is output stream </para>
</entry>
                            </row>
                            <row>
                                <entry>cCalendar</entry>
                                <entry>
<para>is a reference to an object of <link linkend="_classCCalendar">CCalendar</link> </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 if all is OK </para>

<para>-4 if input id from user is not correct </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classCCalendar_a193a333a15c459234ffb3ce3b49216fb_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classCCalendar_a193a333a15c459234ffb3ce3b49216fb_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_classCCalendar_1aff96e01495c697bf4fc33665a495a6c5"/>    <section>
    <title>generateId()</title>
<indexterm><primary>generateId</primary><secondary>CCalendar</secondary></indexterm>
<indexterm><primary>CCalendar</primary><secondary>generateId</secondary></indexterm>
<para><computeroutput>size_t CCalendar::generateId (<link linkend="_classCCalendar">CCalendar</link> &amp; cCalendar)</computeroutput></para>
<para>This method generate new and unique index for event.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>cCalendar</entry>
                                <entry>
<para>is a reference to an object of <link linkend="_classCCalendar">CCalendar</link> </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>new and unique id of size_t type. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classCCalendar_aff96e01495c697bf4fc33665a495a6c5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classCCalendar_aff96e01495c697bf4fc33665a495a6c5_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_classCCalendar_1a0c2e455c09c8184af4dca3569cf988bb"/>    <section>
    <title>listEvents()</title>
<indexterm><primary>listEvents</primary><secondary>CCalendar</secondary></indexterm>
<indexterm><primary>CCalendar</primary><secondary>listEvents</secondary></indexterm>
<para><computeroutput>void CCalendar::listEvents (std::ostream &amp; m_Out, <link linkend="_classCCalendar">CCalendar</link> &amp; cCalendar) const</computeroutput></para>
<para>This method prints all events which are stored in database in calendar.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>out</entry>
                                <entry>
<para>is output stream </para>
</entry>
                            </row>
                            <row>
                                <entry>cCalendar</entry>
                                <entry>
<para>is a reference to an object of <link linkend="_classCCalendar">CCalendar</link> </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classCCalendar_a0c2e455c09c8184af4dca3569cf988bb_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_classCCalendar_1a6dcbdf6dedfadc8905159e522a87cead"/>    <section>
    <title>returnMapByDate()</title>
<indexterm><primary>returnMapByDate</primary><secondary>CCalendar</secondary></indexterm>
<indexterm><primary>CCalendar</primary><secondary>returnMapByDate</secondary></indexterm>
<para><computeroutput>std::multimap&lt; std::string, std::shared_ptr&lt; <link linkend="_classCEvent">CEvent</link> &gt; &gt; &amp; CCalendar::returnMapByDate ( )</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classCCalendar_a6dcbdf6dedfadc8905159e522a87cead_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_classCCalendar_1a1120052209755bc9b1aff8b9f5e50eba"/>    <section>
    <title>returnMapById()</title>
<indexterm><primary>returnMapById</primary><secondary>CCalendar</secondary></indexterm>
<indexterm><primary>CCalendar</primary><secondary>returnMapById</secondary></indexterm>
<para><computeroutput>std::map&lt; int, std::shared_ptr&lt; <link linkend="_classCEvent">CEvent</link> &gt; &gt; &amp; CCalendar::returnMapById ( )</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classCCalendar_a1120052209755bc9b1aff8b9f5e50eba_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_classCCalendar_1a60b07c55f05e291a077a3521e085e706"/>    <section>
    <title>returnMapByName()</title>
<indexterm><primary>returnMapByName</primary><secondary>CCalendar</secondary></indexterm>
<indexterm><primary>CCalendar</primary><secondary>returnMapByName</secondary></indexterm>
<para><computeroutput>std::multimap&lt; std::string, std::shared_ptr&lt; <link linkend="_classCEvent">CEvent</link> &gt; &gt; &amp; CCalendar::returnMapByName ( )</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classCCalendar_a60b07c55f05e291a077a3521e085e706_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classCCalendar_1a9e5f09c029e83e6cf74e396a93a7ba9c"/>    <section>
    <title>cDate</title>
<indexterm><primary>cDate</primary><secondary>CCalendar</secondary></indexterm>
<indexterm><primary>CCalendar</primary><secondary>cDate</secondary></indexterm>
<para><computeroutput><link linkend="_classCDate">CDate</link> CCalendar::cDate {}<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_classCCalendar_1a831670618589ac155c0530f9a27bda84"/>    <section>
    <title>mapOfEventsByDate</title>
<indexterm><primary>mapOfEventsByDate</primary><secondary>CCalendar</secondary></indexterm>
<indexterm><primary>CCalendar</primary><secondary>mapOfEventsByDate</secondary></indexterm>
<para><computeroutput>std::multimap&lt;std::string, std::shared_ptr&lt;<link linkend="_classCEvent">CEvent</link>&gt; &gt; CCalendar::mapOfEventsByDate<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>multimap of Events, ordered ascending by &quot;Date from&quot;, converted to string, second param is smart pointer to object of type <link linkend="_classCEvent">CEvent</link> kay is not unique, calendar could has some events with same dates </para>
    </section><anchor xml:id="_classCCalendar_1ab0dbe65e1e447c729d1fb4bf6afe9833"/>    <section>
    <title>mapOfEventsById</title>
<indexterm><primary>mapOfEventsById</primary><secondary>CCalendar</secondary></indexterm>
<indexterm><primary>CCalendar</primary><secondary>mapOfEventsById</secondary></indexterm>
<para><computeroutput>std::map&lt;int, std::shared_ptr&lt;<link linkend="_classCEvent">CEvent</link>&gt; &gt; CCalendar::mapOfEventsById<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>map of Events, ordered ascending by id, whose type is int, second param is smart pointer to object of type <link linkend="_classCEvent">CEvent</link> each id(index) has just one event. Another words, index is unique. </para>
    </section><anchor xml:id="_classCCalendar_1ab6f9bba9827b6d499692d6d3e6b93262"/>    <section>
    <title>mapOfEventsByName</title>
<indexterm><primary>mapOfEventsByName</primary><secondary>CCalendar</secondary></indexterm>
<indexterm><primary>CCalendar</primary><secondary>mapOfEventsByName</secondary></indexterm>
<para><computeroutput>std::multimap&lt;std::string, std::shared_ptr&lt;<link linkend="_classCEvent">CEvent</link>&gt; &gt; CCalendar::mapOfEventsByName<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>multimap of Events, ordered ascending by name with type string, second param is smart pointer to object of type <link linkend="_classCEvent">CEvent</link> name of event is not unique at this calendar </para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
src/Calendar/<link linkend="_CCalendar_8h">CCalendar.h</link>src/Calendar/<link linkend="_CCalendar_8cpp">CCalendar.cpp</link></section>
</section>

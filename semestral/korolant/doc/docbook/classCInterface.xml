<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classCInterface">
<title>CInterface Class Reference</title>
<indexterm><primary>CInterface</primary></indexterm>
<para>
<computeroutput>#include &lt;CInterface.h&gt;</computeroutput>
</para>
Collaboration diagram for CInterface:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classCInterface__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classCInterface_1a488ef82828c8194b536b8107d50ad945">CInterface</link> (std::istream &amp;in, std::ostream &amp;out, const <link linkend="_classCCalendar">CCalendar</link> &amp;cCalendarIn)</para>
</listitem>
            <listitem><para>int <link linkend="_classCInterface_1a2d740d4e6053226bb94ffd7e0b3f8d2f">doSmthWithCommand</link> (std::map&lt; std::string, <link linkend="_classCView">CView</link> * &gt; &amp;views)</para>
</listitem>
            <listitem><para>void <link linkend="_classCInterface_1a7d908fb713571440519ad4df6ec19619">getCommand</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>std::istream &amp; <link linkend="_classCInterface_1a3dbba87df09378d73435abb9b842fa24">m_In</link></para>
</listitem>
            <listitem><para>std::ostream &amp; <link linkend="_classCInterface_1a13963838a5bba3697cb2a56dfa795052">m_Out</link></para>
</listitem>
            <listitem><para>std::vector&lt; std::string &gt; <link linkend="_classCInterface_1a10f5954597a82c5ed58dac734f7e0760">words</link></para>
</listitem>
            <listitem><para><link linkend="_classCCalendar">CCalendar</link> <link linkend="_classCInterface_1aac13f72fb588343c620ad673665bcf55">cCalendar</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classCInterface_1a488ef82828c8194b536b8107d50ad945"/>    <section>
    <title>CInterface()</title>
<indexterm><primary>CInterface</primary><secondary>CInterface</secondary></indexterm>
<indexterm><primary>CInterface</primary><secondary>CInterface</secondary></indexterm>
<para><computeroutput>CInterface::CInterface (std::istream &amp; in, std::ostream &amp; out, const <link linkend="_classCCalendar">CCalendar</link> &amp; cCalendarIn)</computeroutput></para>
<para>Constructor of <link linkend="_classCInterface">CInterface</link></para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in</entry>
                                <entry>
<para>is input stream </para>
</entry>
                            </row>
                            <row>
                                <entry>out</entry>
                                <entry>
<para>is output stream </para>
</entry>
                            </row>
                            <row>
                                <entry>cCalendarIn</entry>
                                <entry>
<para>is a const reference on object of type <link linkend="_classCCalendar">CCalendar</link> </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classCInterface_1a2d740d4e6053226bb94ffd7e0b3f8d2f"/>    <section>
    <title>doSmthWithCommand()</title>
<indexterm><primary>doSmthWithCommand</primary><secondary>CInterface</secondary></indexterm>
<indexterm><primary>CInterface</primary><secondary>doSmthWithCommand</secondary></indexterm>
<para><computeroutput>int CInterface::doSmthWithCommand (std::map&lt; std::string, <link linkend="_classCView">CView</link> * &gt; &amp; views)</computeroutput></para>
<para>This method decides what to do the next with the command(input from user) stored in the vector &quot;words&quot;. If user will write command in expected format, then the method will call other methods, otherwise it will not call any methods and will return -1 or -2 as If in program next something will go wrong, whis method returns -4</para>

<para>List of commands, which this method catches. new ... - create new event. delete ... delete event. listEvents - lists all events from calendar. repeat ... - set repeat for event with user&apos;s time interval. move ... - postopne event, which user will choose. findFirstPossible ... - find first possible date to pospone event. showDaily ... - show calendar and all events for day. showWeekly ... - show calendar and all events for week. showMonthly ... - show calendar and all events for month. showYearly ... - show calendar and all events for year. find ... - find event. load [filename] - upload all events from the file called &quot;filename&quot;. save [filename] - save all events to the file called &quot;filename&quot;. edit ... - edit event. help - show all commands. quit - end the program.</para>

<para><formalpara><title>Returns</title>

<para>0 = all is OK </para>

<para>-1 = nothing was written </para>

<para>-2 = command does not exist </para>

<para>-3 = command &quot;quit&quot; </para>

<para>-4 = something went wrong </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classCInterface_a2d740d4e6053226bb94ffd7e0b3f8d2f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classCInterface_a2d740d4e6053226bb94ffd7e0b3f8d2f_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_classCInterface_1a7d908fb713571440519ad4df6ec19619"/>    <section>
    <title>getCommand()</title>
<indexterm><primary>getCommand</primary><secondary>CInterface</secondary></indexterm>
<indexterm><primary>CInterface</primary><secondary>getCommand</secondary></indexterm>
<para><computeroutput>void CInterface::getCommand ( )</computeroutput></para>
<para>This method catches the input from user and put the input to the vector of strings called &quot;words&quot;. </para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classCInterface_a7d908fb713571440519ad4df6ec19619_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classCInterface_1aac13f72fb588343c620ad673665bcf55"/>    <section>
    <title>cCalendar</title>
<indexterm><primary>cCalendar</primary><secondary>CInterface</secondary></indexterm>
<indexterm><primary>CInterface</primary><secondary>cCalendar</secondary></indexterm>
<para><computeroutput><link linkend="_classCCalendar">CCalendar</link> CInterface::cCalendar<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_classCInterface_1a3dbba87df09378d73435abb9b842fa24"/>    <section>
    <title>m_In</title>
<indexterm><primary>m_In</primary><secondary>CInterface</secondary></indexterm>
<indexterm><primary>CInterface</primary><secondary>m_In</secondary></indexterm>
<para><computeroutput>std::istream&amp; CInterface::m_In<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_classCInterface_1a13963838a5bba3697cb2a56dfa795052"/>    <section>
    <title>m_Out</title>
<indexterm><primary>m_Out</primary><secondary>CInterface</secondary></indexterm>
<indexterm><primary>CInterface</primary><secondary>m_Out</secondary></indexterm>
<para><computeroutput>std::ostream&amp; CInterface::m_Out<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_classCInterface_1a10f5954597a82c5ed58dac734f7e0760"/>    <section>
    <title>words</title>
<indexterm><primary>words</primary><secondary>CInterface</secondary></indexterm>
<indexterm><primary>CInterface</primary><secondary>words</secondary></indexterm>
<para><computeroutput>std::vector&lt;std::string&gt; CInterface::words<computeroutput>[private]</computeroutput></computeroutput></para>
<para>vector of command(inputs) from user </para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
src/Interface/<link linkend="_CInterface_8h">CInterface.h</link>src/Interface/<link linkend="_CInterface_8cpp">CInterface.cpp</link></section>
</section>
